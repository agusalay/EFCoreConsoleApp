// <auto-generated />
using System;
using EFCoreConsoleApp;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace EFCoreConsoleApp.Migrations
{
    [DbContext(typeof(SchoolContext))]
    partial class SchoolContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "5.0.1");

            modelBuilder.Entity("EFCoreConsoleApp.Entities.Course", b =>
                {
                    b.Property<int>("CourseId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("CourseName")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("EndDate")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("StartDate")
                        .HasColumnType("TEXT");

                    b.HasKey("CourseId");

                    b.ToTable("Courses");

                    b.HasData(
                        new
                        {
                            CourseId = 1,
                            CourseName = "CourseName 1",
                            EndDate = new DateTime(2021, 1, 18, 15, 24, 56, 132, DateTimeKind.Local).AddTicks(1038),
                            StartDate = new DateTime(2020, 12, 19, 15, 24, 56, 130, DateTimeKind.Local).AddTicks(9881)
                        },
                        new
                        {
                            CourseId = 2,
                            CourseName = "CourseName 2",
                            EndDate = new DateTime(2021, 1, 18, 15, 24, 56, 132, DateTimeKind.Local).AddTicks(1675),
                            StartDate = new DateTime(2020, 12, 18, 15, 24, 56, 132, DateTimeKind.Local).AddTicks(1657)
                        },
                        new
                        {
                            CourseId = 3,
                            CourseName = "CourseName 3",
                            EndDate = new DateTime(2021, 1, 18, 15, 24, 56, 132, DateTimeKind.Local).AddTicks(1690),
                            StartDate = new DateTime(2020, 12, 18, 15, 24, 56, 132, DateTimeKind.Local).AddTicks(1689)
                        },
                        new
                        {
                            CourseId = 4,
                            CourseName = "CourseName 4",
                            EndDate = new DateTime(2021, 1, 18, 15, 24, 56, 132, DateTimeKind.Local).AddTicks(1693),
                            StartDate = new DateTime(2020, 12, 19, 15, 24, 56, 132, DateTimeKind.Local).AddTicks(1692)
                        },
                        new
                        {
                            CourseId = 5,
                            CourseName = "CourseName 5",
                            EndDate = new DateTime(2021, 1, 18, 15, 24, 56, 132, DateTimeKind.Local).AddTicks(1695),
                            StartDate = new DateTime(2020, 12, 19, 15, 24, 56, 132, DateTimeKind.Local).AddTicks(1694)
                        });
                });

            modelBuilder.Entity("EFCoreConsoleApp.Entities.Student", b =>
                {
                    b.Property<int>("StudentId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int?>("CourseId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .HasColumnType("TEXT");

                    b.HasKey("StudentId");

                    b.HasIndex("CourseId");

                    b.ToTable("Students");

                    b.HasData(
                        new
                        {
                            StudentId = 1,
                            CourseId = 1,
                            Name = "Abhimanyu K Vatsa"
                        },
                        new
                        {
                            StudentId = 2,
                            CourseId = 1,
                            Name = "Deepak Kumar Gupta"
                        },
                        new
                        {
                            StudentId = 3,
                            CourseId = 2,
                            Name = "Manish Kumar"
                        },
                        new
                        {
                            StudentId = 4,
                            CourseId = 3,
                            Name = "Rohit Ranjan"
                        },
                        new
                        {
                            StudentId = 5,
                            CourseId = 4,
                            Name = "Shivam"
                        });
                });

            modelBuilder.Entity("EFCoreConsoleApp.Entities.Student", b =>
                {
                    b.HasOne("EFCoreConsoleApp.Entities.Course", "Course")
                        .WithMany("Students")
                        .HasForeignKey("CourseId");

                    b.Navigation("Course");
                });

            modelBuilder.Entity("EFCoreConsoleApp.Entities.Course", b =>
                {
                    b.Navigation("Students");
                });
#pragma warning restore 612, 618
        }
    }
}
